apply plugin: 'java'

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

version '0.0.0'

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
    //repository for JMetro
    maven { url  "https://dl.bintray.com/dukke/maven" }
    //repository for markdown-javafx-renderer
    maven {
        url "http://sandec.bintray.com/repo"
    }
    //repository for JUnique
    maven {
        url "https://raw.githubusercontent.com/terjedahl/junique/master/maven2"
    }
}

compileJava {
    options.compilerArgs += ["--add-exports", "javafx.base/com.sun.javafx=ALL-UNNAMED"]
    options.compilerArgs += ["--add-exports", "javafx.base/com.sun.javafx.runtime=ALL-UNNAMED"]
    options.compilerArgs += ["--add-exports", "javafx.graphics/com.sun.javafx.application=ALL-UNNAMED"]
    options.compilerArgs << '-Xlint:unchecked'
}

compileTestJava {
    options.compilerArgs += ["--add-exports", "javafx.base/com.sun.javafx=ALL-UNNAMED"]
    options.compilerArgs += ["--add-exports", "javafx.base/com.sun.javafx.runtime=ALL-UNNAMED"]
    options.compilerArgs += ["--add-exports", "javafx.graphics/com.sun.javafx.application=ALL-UNNAMED"]
}

processResources {
    from ('src/main/java') {
        include '**/*.fxml'
        include '**/*.css'
    }
}

def mainClass = 'com.dansoftware.libraryapp.main.Main'

jar {
    manifest {
       attributes 'Main-Class': mainClass
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

test {
    useJUnitPlatform()
}

dependencies {

    //logging
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    implementation group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'

    //JUnit 5
    testImplementation('org.junit.jupiter:junit-jupiter:5.5.2')

    //utility libraries
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'org.jetbrains:annotations:19.0.0'
    implementation 'org.reflections:reflections:0.9.12'
    implementation group: 'commons-io', name: 'commons-io', version: '2.6'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.10'
    implementation group: 'commons-collections', name: 'commons-collections', version: '3.2.2'
    implementation 'com.github.Dansoftowner:jFileGoodies:1.2'

    //javaFX libraries
    implementation 'com.jfoenix:jfoenix:9.0.9'
    implementation 'org.jfxtras:jmetro:11.6.13'
    implementation group: 'org.controlsfx', name:'controlsfx', version: '11.0.1'
    //Original: implementation group: 'com.dlsc.workbenchfx', name: 'workbenchfx-core', version: '11.1.0'
    implementation 'com.github.Dansoftowner.workbench-fx-modified:workbenchfx-core:11.1.3' //Modified WorkBenchFX
    implementation 'io.github.typhon0:AnimateFX:1.2.1'
    implementation "com.sandec:mdfx:0.1.6"
    implementation 'com.github.Dansoftowner:FXTaskbarProgressBar:v11.2.7'

    //nitrite database
    implementation 'org.dizitart:nitrite:3.4.2'

    //junique
    implementation 'it.sauronsoftware:junique:1.0.4'

    //libraries from the local file system
    implementation fileTree(dir: 'external-libraries', include: '*.jar')
}
