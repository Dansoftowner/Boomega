/*
 * Boomega - A modern book explorer & catalog application
 * Copyright (C) 2020-2022  Daniel Gyoerffy
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

buildscript {
    repositories {
        gradlePluginPortal()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$KOTLIN_VERSION"
        classpath "org.openjfx:javafx-plugin:$JAVAFX_PLUGIN_VERSION"
        classpath "com.github.ben-manes:gradle-versions-plugin:0.42.0"
    }
}

allprojects {
    group 'com.dansoftware.boomega'
    version BOOMEGA_VERSION
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'com.github.ben-manes.versions'
    apply plugin: 'org.openjfx.javafxplugin'

    repositories {
        mavenCentral()
        maven { url "https://jitpack.io" }
        maven { url "https://raw.githubusercontent.com/terjedahl/junique/master/maven2" } // repository for JUnique
        maven { url "https://sandec.jfrog.io/artifactory/repo" } // repository for MDFX
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }

    [compileJava, compileTestJava].forEach {
        it.sourceCompatibility = JAVA_VERSION
        it.targetCompatibility = JAVA_VERSION
        it.options.encoding = 'UTF-8'
    }

    [compileKotlin, compileTestKotlin].forEach {
        it.kotlinOptions {
            jvmTarget = JAVA_VERSION
            freeCompilerArgs += '-Xjvm-default=all'
        }
    }

    test {
        useJUnitPlatform()
    }

    javafx {
        version = JAVAFX_VERSION
    }

    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib:$KOTLIN_VERSION"

        //logging
        implementation 'org.slf4j:slf4j-api:1.7.36'

        //Testing
        testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
        testImplementation 'org.assertj:assertj-core:3.22.0'
        testImplementation 'org.mockito:mockito-core:4.4.0'
        testImplementation 'org.mockito:mockito-junit-jupiter:4.3.1'
        testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.2'
    }
}